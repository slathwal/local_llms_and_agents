{
  "hash": "6e16205f1482a390caa5171e9be249b0",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Basics of Langchain and Ollama - Call a local chat model using LangChain\"\nauthor: \"Shefali Lathwal\"\ndate: \"2025-05-30\"\ndate-modified: last-modified\neditor: visual\ntoc: true\nformat: html\njupyter: python_langchain\nexecute:\n  freeze: auto\n---\n\n\n\n\n# Connect to an Ollama Model\n\nUse ollama chat interface with Langchain\n\nChatOllama is langchain's abstraction to the ollama API endpoint.\n\n::: {#7cc53ac7 .cell execution_count=1}\n``` {.python .cell-code}\nfrom langchain_ollama import ChatOllama\n\n# Define a model to use. The model needs to be present locally. The parameter, temperature, sets the creativity of the model, with 0 being least creative and 1 being the most creative.\ngemma3 = ChatOllama(model = \"gemma3:4b\", temperature = 0)\n```\n:::\n\n\n# Send a message to a model and get a response\n\nWe use two main methods to interact with Chat Models\n\n-   stream - returns partial responses as they are generated. it's best used in chat interfaces where it's useful for users to see answer as it is being generated.\n-   invoke - returns the entire response after the model finishes generating. Invoke will be used in agentic workflows where we will use the entire response before proceeding to the next step.\n\nFor the rest of the section, we will focus on the invoke method.\n\nNow to get a response back from a model, we first need to pass a text, called prompt, to the model.\n\nWe can do the following: - Pass a string directly - pass a list of messages containing dictionaries - pass messages using the class ChatPromptTemplate - pass a list of messages containing different messsages objects\n\n## Directly pass a prompt to the model\n\n::: {#5aae4c48 .cell execution_count=2}\n``` {.python .cell-code}\nfrom IPython.display import Markdown\nprompt = \"Tell me something about Canada in two sentences.\"\nresponse = gemma3.invoke(prompt)\nMarkdown(response.content)\n```\n\n::: {.cell-output .cell-output-display .cell-output-markdown execution_count=2}\nCanada is a vast and diverse country, known for its stunning natural landscapes like the Rocky Mountains and the Canadian Rockies. It’s also one of the world’s leading exporters of natural resources and boasts a multicultural society with a strong emphasis on peacekeeping and diplomacy.\n:::\n:::\n\n\n## Use a message list with a dictionary containing a role and content fields\n\nChat models take this prompt as a message. Messages have a:\n\n-   role (that describes who is saying the message)\n-   a content property\n\nJust like we saw in the ollama python package, we can get a response back by defining a message as shown.\n\n::: {#b6a82eb1 .cell execution_count=3}\n``` {.python .cell-code}\nprompt = \"Tell me something about Canada in two sentences.\"\nmessages = [{\"role\": \"user\", \"content\": prompt}]\n\nresponse = gemma3.invoke(input = messages)\nresponse\n```\n\n::: {.cell-output .cell-output-display execution_count=3}\n```\nAIMessage(content='Canada is a vast and diverse country, known for its stunning natural landscapes like the Rocky Mountains and the Canadian Rockies. It’s also one of the world’s leading exporters of natural resources and boasts a multicultural society with a strong emphasis on peacekeeping and diplomacy.', additional_kwargs={}, response_metadata={'model': 'gemma3:4b', 'created_at': '2025-06-03T23:07:28.303056Z', 'done': True, 'done_reason': 'stop', 'total_duration': 5643592709, 'load_duration': 55869792, 'prompt_eval_count': 18, 'prompt_eval_duration': 71276375, 'eval_count': 53, 'eval_duration': 5515728333, 'model_name': 'gemma3:4b'}, id='run-bf7dd4e6-66f5-4837-9650-440957f6b80e-0', usage_metadata={'input_tokens': 18, 'output_tokens': 53, 'total_tokens': 71})\n```\n:::\n:::\n\n\nIf we look at the output above, we see that the model returns an object called `AIMessage`, with the actual message present in the `response.content` field.\n\n## Re-use a prompt by defining a template\n\nWe can define a user prompt that takes variables as input and keep re-using the prompt. We need this capability because of the following reasons: 1. As we build more complex workflows, prompts can get long and detailed and we do not want to type them repeatedly. Thereofre, we can create templates and re-use them with minor changes. 2. LangChain provides prompts for some common tasks such as Q&A, summarization, connecting SQL databases, connecting to APIs, so we can use built-in prompt templates from langchain. 3. LangChain support output parsing. You can ask outputs to be in specific formats with tags such as \"Thought\", \"Action\", \"Observation\" and prompt templates are a useful abstraction that allow us to extract these keywords.\n\n-   We define a special object called ChatPromptTemplate\n\n::: {#bc8cbc6a .cell execution_count=4}\n``` {.python .cell-code}\nfrom langchain.prompts import ChatPromptTemplate\n\n# Do not use the f-string in the prompt since the variables will be defined later.\ntemplate_string = \"Tell me about {country} in {num} sentences.\"\nprompt_template = ChatPromptTemplate.from_template(template_string)\nprompt_template\n```\n\n::: {.cell-output .cell-output-display execution_count=4}\n```\nChatPromptTemplate(input_variables=['country', 'num'], input_types={}, partial_variables={}, messages=[HumanMessagePromptTemplate(prompt=PromptTemplate(input_variables=['country', 'num'], input_types={}, partial_variables={}, template='Tell me about {country} in {num} sentences.'), additional_kwargs={})])\n```\n:::\n:::\n\n\nExtract the actual prompt from the template as follows:\n\n::: {#3764f742 .cell execution_count=5}\n``` {.python .cell-code}\nprompt_template.messages[0].prompt, prompt_template.messages[0].prompt.input_variables \n```\n\n::: {.cell-output .cell-output-display execution_count=5}\n```\n(PromptTemplate(input_variables=['country', 'num'], input_types={}, partial_variables={}, template='Tell me about {country} in {num} sentences.'),\n ['country', 'num'])\n```\n:::\n:::\n\n\nWe can see that the prompt has two input variales.\n\nCreate a message from the template using some variable values and pass it to a model\n\n::: {#c18cbe87 .cell execution_count=6}\n``` {.python .cell-code}\ncountry = \"France\"\nnum_sentences = \"two\"\n\n# This code inserts the variables into the ChatPromptTemplate object\nmessage = prompt_template.format_messages(\n    country = country,\n    num = num_sentences\n)\nprint(\"User message:\", message)\nresponse = gemma3.invoke(input = message)\nprint(\"Model response:\", response)\nMarkdown(response.content)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nUser message: [HumanMessage(content='Tell me about France in two sentences.', additional_kwargs={}, response_metadata={})]\nModel response: content='France is a country renowned for its rich history, vibrant culture, and iconic landmarks like the Eiffel Tower and Louvre Museum.  It’s a major global player in art, fashion, cuisine, and diplomacy, boasting a diverse landscape from the Alps to the Mediterranean coast.' additional_kwargs={} response_metadata={'model': 'gemma3:4b', 'created_at': '2025-06-03T23:07:34.964711Z', 'done': True, 'done_reason': 'stop', 'total_duration': 6585585875, 'load_duration': 59345708, 'prompt_eval_count': 17, 'prompt_eval_duration': 307363792, 'eval_count': 55, 'eval_duration': 6218251125, 'model_name': 'gemma3:4b'} id='run-d1fbac7c-1061-4db7-ad77-a53b0d934f26-0' usage_metadata={'input_tokens': 17, 'output_tokens': 55, 'total_tokens': 72}\n```\n:::\n\n::: {.cell-output .cell-output-display .cell-output-markdown execution_count=6}\nFrance is a country renowned for its rich history, vibrant culture, and iconic landmarks like the Eiffel Tower and Louvre Museum.  It’s a major global player in art, fashion, cuisine, and diplomacy, boasting a diverse landscape from the Alps to the Mediterranean coast.\n:::\n:::\n\n\n## Use the built-in messages classes in LangChain\n\nWe are using a class called HumanMessage\n\n::: {#71894ee6 .cell execution_count=7}\n``` {.python .cell-code}\nfrom langchain_core.messages import HumanMessage\nprompt = \"Tell me something about Canada in two sentences.\"\n# Create a Message\nmsg = HumanMessage(content = prompt, name = \"Shefali\")\n\n# Make a message list\nmessages = [msg]\n\n# Invoke the model with a list of messages\n# Make sure ollama is running on your system\nresponse = gemma3.invoke(messages)\nprint(response)\nMarkdown(response.content)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\ncontent='Canada is a vast and diverse country, known for its stunning natural landscapes like the Rocky Mountains and the Canadian Rockies. It’s also one of the world’s leading exporters of natural resources and boasts a multicultural society with a strong emphasis on peacekeeping and diplomacy.' additional_kwargs={} response_metadata={'model': 'gemma3:4b', 'created_at': '2025-06-03T23:07:40.533433Z', 'done': True, 'done_reason': 'stop', 'total_duration': 5530868709, 'load_duration': 66575709, 'prompt_eval_count': 18, 'prompt_eval_duration': 348117125, 'eval_count': 53, 'eval_duration': 5115428750, 'model_name': 'gemma3:4b'} id='run-db95d931-65c9-4c69-b168-a225e5a255d4-0' usage_metadata={'input_tokens': 18, 'output_tokens': 53, 'total_tokens': 71}\n```\n:::\n\n::: {.cell-output .cell-output-display .cell-output-markdown execution_count=7}\nCanada is a vast and diverse country, known for its stunning natural landscapes like the Rocky Mountains and the Canadian Rockies. It’s also one of the world’s leading exporters of natural resources and boasts a multicultural society with a strong emphasis on peacekeeping and diplomacy.\n:::\n:::\n\n\nWe get an `AIMessage` back.\n\n## Use stream method to call the model\n\nResponse is printed as it is being generated.\n\n::: {#1e27a35d .cell execution_count=8}\n``` {.python .cell-code}\nfor chunk in gemma3.stream(\"Tell me about Canada in 4 sentences.\"):\n    print(chunk.content, end=\"\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nCanada is a vast and diverse country located in North America, known for its stunning natural landscapes including the Rocky Mountains, the Canadian Shield, and the Atlantic coastline. It’s a constitutional monarchy with a parliamentary system of government and is renowned for its multiculturalism and welcoming immigration policies. Canada boasts a thriving economy driven by natural resources, technology, and a strong service sector.  With a population of over 38 million, it’s a friendly and progressive nation committed to social programs and environmental sustainability.\n```\n:::\n:::\n\n\n# Use community tools available in LangChain\n\nAs an example, we are going to look at a tool to get search results from the web. Note, just using the tool does not require calling an LLM. Tools are independent and can be used with an LLM, but also independently.\n\n::: {#35c7e0d2 .cell execution_count=9}\n``` {.python .cell-code}\nfrom langchain_community.tools import DuckDuckGoSearchRun, DuckDuckGoSearchResults\nfrom langchain_community.utilities.duckduckgo_search import DuckDuckGoSearchAPIWrapper\n\nsearch = DuckDuckGoSearchResults()\nsearch.invoke(\"What's the latest news about US?\")\n```\n\n::: {.cell-output .cell-output-display execution_count=9}\n```\n\"snippet: Reuters.com is your online source for the latest US news stories and current events, ensuring our readers up to date with any breaking news developments, title: Latest U.S. News | Top headlines from the USA | Reuters, link: https://www.reuters.com/world/us/, snippet: Ava Moore, 18, was killed in a jet ski hit-and-run while kayaking on Sunday. States bordering the Great Lakes are under air quality alerts on Friday. Bernard Kerik, who served as New York City's ..., title: U.S. News | Latest National News, Videos & Photos - ABC News - ABC News, link: https://abcnews.go.com/US, snippet: NPR news, audio, and podcasts. Coverage of breaking stories, national and world news, politics, business, science, technology, and extended coverage of major national and world events., title: News: U.S. and World News Headlines : NPR, link: https://www.npr.org/sections/news/, snippet: Us News: Check here latest news and updates about Us in India. Read top headlines and breaking news today in India about Us on financialexpress.com., title: Us News: Us Latest News, Us Today news, Us Breaking News | The ..., link: https://www.financialexpress.com/world-news/us-news/\"\n```\n:::\n:::\n\n\n::: {#fbd77991 .cell execution_count=10}\n``` {.python .cell-code}\nsearch = DuckDuckGoSearchRun()\nsearch.invoke(\"What's the latest news about US?\")\n```\n\n::: {.cell-output .cell-output-display execution_count=10}\n```\n\"Ava Moore, 18, was killed in a jet ski hit-and-run while kayaking on Sunday. States bordering the Great Lakes are under air quality alerts on Friday. Bernard Kerik, who served as New York City's ... Reuters.com is your online source for the latest US news stories and current events, ensuring our readers up to date with any breaking news developments NPR news, audio, and podcasts. Coverage of breaking stories, national and world news, politics, business, science, technology, and extended coverage of major national and world events. Stay on top of US & Canada latest developments on the ground with Al Jazeera's fact-based news, exclusive video footage, photos and updated maps. For the latest news, analysis and exclusives, follow The Telegraph's expert coverage. ... US News. As the Ukrainians give a masterclass in modern war, our Government rehashes old plans.\"\n```\n:::\n:::\n\n\n",
    "supporting": [
      "03_use_ollama_through_langchain_files"
    ],
    "filters": [],
    "includes": {}
  }
}